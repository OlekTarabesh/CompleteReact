{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Complete React Developer in 2023 /capstone/crwn-clothing/src/routes/category/category.component.jsx\",\n  _s = $RefreshSig$();\n// import { useState, useEffect, Fragment } from 'react';\n// import { useSelector } from 'react-redux';\n// import { useParams } from 'react-router-dom';\n\n// import ProductCard from '../../components/product-card/product-card.component';\n// import Spinner from '../../components/spinner.component/spinner.component';\n\n// import { selectCategoriesMap, selectIsLoading } from '../../store/categories/category.selector'; \n\n// import { CategoryContainer, Title } from './category.styles';\n\n// const Category = () => {\n//     const {category} = useParams();\n//     const categoriesMap = useSelector(selectCategoriesMap);\n//     const isLoading = useSelector(selectIsLoading);\n//     const [products, setProducts] = useState(categoriesMap[category]);\n\n//     useEffect(() => {\n//         setProducts(categoriesMap[category])\n//     }, [category, categoriesMap])\n\n//      return (\n//         <Fragment>\n//             <Title>{category.toUpperCase()}</Title>\n//             {isLoading ? (\n//                 <Spinner />\n//             ) : (\n//                 <CategoryContainer>\n//                 {products &&\n//                     products.map((product) => (\n//                     <ProductCard key={product.id} product={product} />\n//                     ))}\n//                 </CategoryContainer>\n//             )}\n//         </Fragment>\n//   );\n// };\n\n// export default Category;\n\nimport { useState, useEffect, Fragment } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ProductCard from '../../components/product-card/product-card.component';\nimport Spinner from '../../components/spinner.component/spinner.component';\nimport { selectCategoriesMap, selectIsLoading } from '../../store/categories/category.selector';\nimport { CategoryContainer, Title } from './category.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Category = () => {\n  _s();\n  const {\n    category\n  } = useParams();\n  const categoriesMap = useSelector(selectCategoriesMap);\n  const isLoading = useSelector(selectIsLoading);\n  const [products, setProducts] = useState(categoriesMap[category]);\n  useEffect(() => {\n    setProducts(categoriesMap[category]);\n  }, [category, categoriesMap]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: category.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CategoryContainer, {\n      children: products && products.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n        product: product\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Category, \"fytdOPTyZ4zJsSB2KGYrdsj5gq0=\", false, function () {\n  return [useParams, useSelector, useSelector];\n});\n_c = Category;\nexport default Category;\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["useState","useEffect","Fragment","useSelector","useParams","ProductCard","Spinner","selectCategoriesMap","selectIsLoading","CategoryContainer","Title","Category","category","categoriesMap","isLoading","products","setProducts","toUpperCase","map","product","id"],"sources":["/Users/apple/Desktop/Complete React Developer in 2023 /capstone/crwn-clothing/src/routes/category/category.component.jsx"],"sourcesContent":["// import { useState, useEffect, Fragment } from 'react';\n// import { useSelector } from 'react-redux';\n// import { useParams } from 'react-router-dom';\n\n// import ProductCard from '../../components/product-card/product-card.component';\n// import Spinner from '../../components/spinner.component/spinner.component';\n\n// import { selectCategoriesMap, selectIsLoading } from '../../store/categories/category.selector'; \n\n// import { CategoryContainer, Title } from './category.styles';\n\n// const Category = () => {\n//     const {category} = useParams();\n//     const categoriesMap = useSelector(selectCategoriesMap);\n//     const isLoading = useSelector(selectIsLoading);\n//     const [products, setProducts] = useState(categoriesMap[category]);\n\n//     useEffect(() => {\n//         setProducts(categoriesMap[category])\n//     }, [category, categoriesMap])\n    \n//      return (\n//         <Fragment>\n//             <Title>{category.toUpperCase()}</Title>\n//             {isLoading ? (\n//                 <Spinner />\n//             ) : (\n//                 <CategoryContainer>\n//                 {products &&\n//                     products.map((product) => (\n//                     <ProductCard key={product.id} product={product} />\n//                     ))}\n//                 </CategoryContainer>\n//             )}\n//         </Fragment>\n//   );\n// };\n\n// export default Category;\n\n\nimport { useState, useEffect, Fragment } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport ProductCard from '../../components/product-card/product-card.component';\nimport Spinner from '../../components/spinner.component/spinner.component';\n\nimport {\n  selectCategoriesMap,\n  selectIsLoading,\n} from '../../store/categories/category.selector';\n\nimport { CategoryContainer, Title } from './category.styles';\n\nconst Category = () => {\n  const { category } = useParams();\n  const categoriesMap = useSelector(selectCategoriesMap);\n  const isLoading = useSelector(selectIsLoading);\n  const [products, setProducts] = useState(categoriesMap[category]);\n\n  useEffect(() => {\n    setProducts(categoriesMap[category]);\n  }, [category, categoriesMap]);\n\n  return (\n    <Fragment>\n      <Title>{category.toUpperCase()}</Title>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <CategoryContainer>\n          {products &&\n            products.map((product) => (\n              <ProductCard key={product.id} product={product} />\n            ))}\n        </CategoryContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Category;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACrD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,WAAW,MAAM,sDAAsD;AAC9E,OAAOC,OAAO,MAAM,sDAAsD;AAE1E,SACEC,mBAAmB,EACnBC,eAAe,QACV,0CAA0C;AAEjD,SAASC,iBAAiB,EAAEC,KAAK,QAAQ,mBAAmB;AAAC;AAE7D,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM;IAAEC;EAAS,CAAC,GAAGR,SAAS,EAAE;EAChC,MAAMS,aAAa,GAAGV,WAAW,CAACI,mBAAmB,CAAC;EACtD,MAAMO,SAAS,GAAGX,WAAW,CAACK,eAAe,CAAC;EAC9C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAACa,aAAa,CAACD,QAAQ,CAAC,CAAC;EAEjEX,SAAS,CAAC,MAAM;IACde,WAAW,CAACH,aAAa,CAACD,QAAQ,CAAC,CAAC;EACtC,CAAC,EAAE,CAACA,QAAQ,EAAEC,aAAa,CAAC,CAAC;EAE7B,oBACE,QAAC,QAAQ;IAAA,wBACP,QAAC,KAAK;MAAA,UAAED,QAAQ,CAACK,WAAW;IAAE;MAAA;MAAA;MAAA;IAAA,QAAS,EACtCH,SAAS,gBACR,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG,gBAEX,QAAC,iBAAiB;MAAA,UACfC,QAAQ,IACPA,QAAQ,CAACG,GAAG,CAAEC,OAAO,iBACnB,QAAC,WAAW;QAAkB,OAAO,EAAEA;MAAQ,GAA7BA,OAAO,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAC7B;IAAC;MAAA;MAAA;MAAA;IAAA,QAEP;EAAA;IAAA;IAAA;IAAA;EAAA,QACQ;AAEf,CAAC;AAAC,GAzBIT,QAAQ;EAAA,QACSP,SAAS,EACRD,WAAW,EACfA,WAAW;AAAA;AAAA,KAHzBQ,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}